{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d931e30b.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n  return (\n    <h2>\n      Expense Tracker\n    </h2>\n  )\n}\n","export default (state, action) => {\n  switch (action.type) {\n    case 'GET_TRANSACTIONS':\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      }\n    case 'DELETE_TRANSACTION':\n      // to delete a transation from TransactionList\n      // connecting with we need to rename id to _id, because that is how it's store in mongoDB\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      }\n    case 'TRANSACTION_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  // bacause now promises are included\n  error: null,\n  // to check if it's loading\n  loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  // now we will be getting this from api\n  async function getTransactions() {\n    try {\n      // no need to add whole url because we added proxy\n      const res = await axios.get('/api/v1/transactions');\n\n      // to send API response to states\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    // since it is a POST req\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction,\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\n  ).toFixed(2);\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">-${expense}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? '-' : '+';\n  return (\n    // connecting with we need to rename id to _id, because that is how it's store in mongoDB\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\n      <button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n    </li>\n  )\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n\n  // since getTransaction is async call we call this in useEffect hook\n  // when we need to make any http kinda request from a comonent we wanna do that in useEffect\n  useEffect(() => {\n    getTransactions();\n\n    // to get rid of warnings: eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n      </ul>\n    </>\n  )\n}\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Creating a new transaction\n    const newTransaction = {\n      // not the best way to generate unique ids\n      id: Math.floor(Math.random() * 100000),\n      text,\n      // to parse into number, otherwise it'll give error\n      amount: +amount\n    }\n    // Adding newly created transaction to our list\n    addTransaction(newTransaction);\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">Amount <br />\n            (negative - expense, positive - income)</label>\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n","import './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}